[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
include = [
    "*.py",
    "backend/",
    "env.example",
    "LICENSE",
    "README.md",
    "UV_SETUP.md",
    "examples/",
    "scripts/",
]

[project]
name = "multi-agent-research-system"
version = "1.0.0"
description = "A sophisticated AI-powered research platform that orchestrates multiple specialized agents to conduct comprehensive research on any topic"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8.1"
authors = [
    { name = "David Lee", email = "david@fireworks.ai" },
]
maintainers = [
    { name = "David Lee (@insigh1)", email = "david@fireworks.ai" },
]
keywords = [
    "ai",
    "research",
    "multi-agent",
    "fastapi",
    "websockets",
    "machine-learning",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # Core dependencies
    "aiohttp>=3.9.0",
    "asyncio-throttle>=1.0.2",
    "tenacity>=8.2.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "structlog>=23.2.0",
    
    # Caching and persistence
    "redis>=4.5.0",
    
    # Monitoring and metrics
    "prometheus-client>=0.19.0",
    "pybreaker>=1.0.2",
    
    # Security
    "cryptography>=41.0.0",
    
    # Progress tracking and CLI
    "tqdm>=4.66.0",
    "rich>=13.7.0",
    "click>=8.1.0",
    
    # Report generation
    "jinja2>=3.1.0",
    "weasyprint>=60.0",
    "markdown>=3.5.0",
    
    # Data validation and processing
    "jsonschema>=4.20.0",
    "python-dateutil>=2.8.0",
    
    # Configuration and environment
    "python-dotenv>=1.0.0",
    
    # Additional utilities
    "backoff>=2.2.0",
    "cachetools>=5.3.0",
    
    # Web UI dependencies
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    "websockets>=12.0",
    "sse-starlette>=1.6.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.scripts]
research-system = "backend.main:main"
research-web = "backend.start_web_ui:main"

[project.urls]
Homepage = "https://github.com/fw-ai/experimental/tree/main/david/Multi_agent_research_system"
Documentation = "https://github.com/fw-ai/experimental/tree/main/david/Multi_agent_research_system#readme"
Repository = "https://github.com/fw-ai/experimental"
Issues = "https://github.com/fw-ai/experimental/issues"
"Author" = "https://github.com/insigh1"
"Company" = "https://fireworks.ai"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["multi_agent_research_system"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "backend/tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
asyncio_mode = "auto" 